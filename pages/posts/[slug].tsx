// import fs from "fs";
// import Markdown from "markdown-to-jsx";
// import matter from "gray-matter";
// import getPostMetadata from '../../components/Post/getPostMetadata';


// import path from 'path'



// const getPostContent = (slug: string) => {
//   const folder = "posts/";
//   const file = `${folder}${slug}.md`;
//   const content = fs.readFileSync(file, "utf8");
//   const matterResult = matter(content);
//   return matterResult;
// };

// export const generateStaticParams = async () => {
//   const posts = getPostMetadata();
//   return posts.map((post) => ({
//     slug: post.slug,
//   }));
// };

// const PostPage = (props: any) => {
//   const slug = props.params.slug;
//   const post = getPostContent(slug);

//   return (
//     <div>
//       <div className="my-12 text-center">
//         <h1 className="text-2xl text-slate-600 ">{post.data.title}</h1>
//         <p className="text-slate-400 mt-2">{post.data.date}</p>
//       </div>

//       <article className="prose">
//         <Markdown>{post.content}</Markdown>
//       </article>
//     </div>
//   );
// };

// export default PostPage;


// export async function getStaticPaths() {
//   const files = fs.readdirSync(path.join('posts'))

//   const paths = files.map((filename) => ({
//     params: {
//       slug: filename.replace('.md', ''),
//     },
//   }))

//   return {
//     paths,
//     fallback: false,
//   }
// }

// export async function getStaticProps(slug: string) {
//   const markdownWithMeta = fs.readFileSync(
//     path.join('posts', slug + '.md'),
//     'utf-8'
//   )

//   const { data: frontmatter, content } = matter(markdownWithMeta)

//   return {
//     props: {
//       frontmatter,
//       slug,
//       content,
//     },
//   }
// }

import { NextPage, InferGetStaticPropsType } from "next";
import { useRouter } from "next/router";
import ErrorPage from "next/error";
import Head from "next/head";
import styles from "@/styles/markdown.module.css";
import markdownToHtml from "@/components/Post/markdownToHtml";
import { getAllPosts, getPostBySlug } from "@/components/Post/getPostMetadata";


type Props = InferGetStaticPropsType<typeof getStaticProps>;

/**
 * 記事のパスを取得する
 */
export const getStaticPaths = async () => {
  const posts = getAllPosts(["slug"]);
  return {
    paths: posts.map((post) => {
      return {
        params: {
          slug: post.slug,
        },
      };
    }),
    fallback: false,
  };
};

/**
 * 記事の内容を取得する
 */
export const getStaticProps = async ({ params }: any) => {
  const post = getPostBySlug(params.slug, ["slug", "title", "date", "content"]);
  // Markdown を HTML に変換する
  const content = await markdownToHtml(post.content);
  // content を詰め直して返す
  return {
    props: {
      post: {
        ...post,
        content,
      },
    },
  };
};

const Post: NextPage<Props> = ({ post }) => {
  const router = useRouter();
  if (!router.isFallback && !post?.slug) {
    return <ErrorPage statusCode={404} />;
  }
  return (
    <div className={styles.wrapper}>
      <Head>
        <title>Hello world!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.flex}>
        <article>
          <h1 >{post.title}</h1>
          <div>
            <div>
              <p>{post.date}</p>
              <div className={styles.markdown} dangerouslySetInnerHTML={{ __html: post.content }} />
            </div>
          </div>
        </article>
      </main>
      <footer>
        <p>Powered by Next.js.</p>
      </footer>
    </div>
  );
};

export default Post;